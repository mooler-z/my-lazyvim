-- print("Hello from")
-- local null_ls = require("null-ls")
--
-- local lsp_formatting = function(bufnr)
--   vim.lsp.buf.format({
--     filter = function(client)
--       -- apply whatever logic you want (in this example, we'll only use null-ls)
--       return client.name == "null-ls"
--     end,
--     bufnr = bufnr,
--   })
-- end
--
-- local lsp = require("lsp-config")
--
-- local null_opts = lsp.build_options("null-ls", {})
--
-- local augroup = vim.api.nvim_create_augroup("LspFormatting", {})
--
-- null_ls.setup({
--   on_attach = function(client, bufnr)
--     null_opts.on_attach(client, bufnr)
--     print("We are formatting")
--     if client.supports_method("textDocument/formatting") then
--       vim.api.nvim_clear_autocmds({ group = augroup, buffer = bufnr })
--       vim.api.nvim_create_autocmd("BufWritePre", {
--         group = augroup,
--         buffer = bufnr,
--         callback = function()
--           --vim.lsp.buf.format({ bufnr = bufnr })
--           --vim.lsp.buf.formatting_sync()
--           lsp_formatting(bufnr)
--         end,
--       })
--     end
--   end,
--   sources = {
--     -- You can add tools not supported by mason.nvim
--     null_ls.builtins.formatting.rome.with({
--       fileypes = { ["vue"] = true },
--     }),
--   },
-- })
